name: Deploy and Notify

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup SSH Connection
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Code to cPanel
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ${{ secrets.DEPLOY_PATH }} &&
            git pull origin main &&
            exit"

      - name: Notify to Telegram After Deploy
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          escape_markdown_v2() {
            echo "$1" | sed -e 's/\\/\\\\/g' \
                            -e 's/_/\\_/g' \
                            -e 's/\*/\\*/g' \
                            -e 's/\[/\\[/g' \
                            -e 's/\]/\\]/g' \
                            -e 's/(/\\(/g' \
                            -e 's/)/\\)/g' \
                            -e 's/`/\\`/g' \
                            -e 's/>/\\>/g' \
                            -e 's/#/\\#/g' \
                            -e 's/\+/\\+/g' \
                            -e 's/-/\\-/g' \
                            -e 's/=/\\=/g' \
                            -e 's/\|/\\|/g' \
                            -e 's/{/\\{/g' \
                            -e 's/}/\\}/g' \
                            -e 's/\./\\./g' \
                            -e 's/!/\\!/g'
          }

          FULL_MESSAGE="${{ github.event.head_commit.message }}"
          TITLE=$(echo "$FULL_MESSAGE" | head -n1)
          DESCRIPTION=$(echo "$FULL_MESSAGE" | tail -n +2)

          if [ -z "$DESCRIPTION" ]; then
            DESCRIPTION="(Tidak ada deskripsi)"
          fi

          ESCAPED_TITLE=$(escape_markdown_v2 "$TITLE")
          ESCAPED_DESCRIPTION=$(escape_markdown_v2 "$DESCRIPTION")
          ESCAPED_REPO=$(escape_markdown_v2 "${{ github.repository }}")
          ESCAPED_ACTOR=$(escape_markdown_v2 "${{ github.actor }}")
          ESCAPED_COMMIT_URL=$(escape_markdown_v2 "${{ github.event.head_commit.url }}")

          MESSAGE="*✅ Berhasil Deploy ke Server Development*\n\n*Repo:* \`$ESCAPED_REPO\`\n*Contributor:* \`$ESCAPED_ACTOR\`\n*Judul Commit:* \`$ESCAPED_TITLE\`\n*Deskripsi:*\n\`\`\`\n$ESCAPED_DESCRIPTION\n\`\`\`\n[Lihat Commit]($ESCAPED_COMMIT_URL)"

          response=$(curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d text="$MESSAGE" \
            -d parse_mode=MarkdownV2)

          echo "Telegram Response: $response"

      - name: Notify Deployment Completion to GitHub Issue
        run: |
          echo "Starting to create issue comment..."
          response=$(curl -X POST \
            -H "Authorization: token ${{ secrets.TOKENS }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
                  "body": "**✅ Berhasil Deploy ke Development Server**:\n- **Branch**: main\n- **Last Commit**: '${{ github.sha }}'\n- **Link**: [Lihat](http://dev.kopmensa.com)\n\nSilahkan lihat di server."
                }' \
            https://api.github.com/repos/${{ github.repository }}/issues/1/comments)

          echo "API response from comment creation: $response"

          echo "Starting to assign assignee..."
          assign_response=$(curl -X PATCH \
            -H "Authorization: token ${{ secrets.TOKENS }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
                  "assignees": ["alfianharisusatya"]
                }' \
            https://api.github.com/repos/${{ github.repository }}/issues/1)

          echo "API response from assignee assignment: $assign_response"
